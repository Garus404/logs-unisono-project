import { NextResponse } from "next/server";

// üì§ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ –Ω–∞ —Å–∞–π—Ç
async function sendVisitNotification(ip: string, userAgent: string, referer?: string) {
  try {
    const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.log('‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.');
      return;
    }

    const message = `
üåê –ù–û–í–´–ô –ü–û–°–ï–¢–ò–¢–ï–õ–¨ –ù–ê –°–ê–ô–¢–ï

üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–µ—â–µ–Ω–∏–∏:**
üìç IP: ${ip}
üïí –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
üì± User Agent: ${userAgent}
üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${userAgent.includes('Windows') ? 'Windows' : userAgent.includes('Mac') ? 'Mac' : userAgent.includes('Linux') ? 'Linux' : 'Unknown'}
üîç –ë—Ä–∞—É–∑–µ—Ä: ${userAgent.includes('Chrome') ? 'Chrome' : userAgent.includes('Firefox') ? 'Firefox' : userAgent.includes('Safari') ? 'Safari' : userAgent.includes('Edge') ? 'Edge' : userAgent.includes('Opera') ? 'Opera' : 'Unknown'}
${referer ? `üîó Referer: ${referer}` : ''}

üö© **–°—Ç–∞—Ç—É—Å:** –ê–ù–û–ù–ò–ú–ù–´–ô –ü–û–°–ï–¢–ò–¢–ï–õ–¨
    `;

    await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message
      })
    });

    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');

  } catch (error) {
    console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:', error);
  }
}

export async function POST(request: Request) {
  try {
    const clientIP = request.headers.get('x-forwarded-for') || 
                    request.headers.get('x-real-ip') || 
                    'unknown';
    const userAgent = request.headers.get('user-agent') || 'unknown';
    const referer = request.headers.get('referer') || 'unknown';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    await sendVisitNotification(clientIP, userAgent, referer);

    return NextResponse.json({ 
      success: true,
      message: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    });

  } catch (error) {
    console.error("Visit Notification Error:", error);
    return NextResponse.json(
      { error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" },
      { status: 500 }
    );
  }
}